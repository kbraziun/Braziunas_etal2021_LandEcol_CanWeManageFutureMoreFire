# iland_run.sub
# run all scenarios for wui fire risk ms
#
# Specify the HTCondor Universe (vanilla is the default and is used
#  for almost all jobs), the desired name of the HTCondor log file,
#  and the desired name of the standard error file.  
#  Wherever you see $(Cluster), HTCondor will insert the queue number
#  assigned to this set of jobs at the time of submission.
universe = vanilla
log = process.log
#
# Name the files where standard output and error should be saved:
output = process.out
error = process.err
#
# Specify your executable (single binary or a script that runs several
#  commands), arguments, and a files for HTCondor to store standard
#  output (or "screen output").
# update $(Step) so that it is not 0-indexed
plusone = $(Step) + 1
NewStep = $INT(plusone, %d)
# executable
executable = iland_run.sh
arguments = $(GCM) $(Scenario) $(NewStep)
#
# Specify that HTCondor should transfer files to and from the
#  computer where each job runs. 
should_transfer_files = YES
when_to_transfer_output = ON_EXIT
#
# Indicate all files that need to go into the interactive job session,
#  including any tar files that you prepared:
transfer_input_files = ilandbuild.tar.gz
#
# It's still important to request enough computing resources. The below 
#  values are a good starting point, but consider your file sizes for an
#  estimate of "disk" and use any other information you might have
#  for "memory" and/or "cpus".
request_cpus = 1
request_memory = 32GB
request_disk = 15GB
#
# requirements
requirements = (OpSysMajorVer == 7)&&(Target.HasGluster== true)
#
# Tell HTCondor how many instances to run
# Can also loop through other variables with arguments
queue 20 GCM,Scenario from scenario_list.txt